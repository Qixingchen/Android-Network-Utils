apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

android {
    compileSdkVersion rootProject.ext.sdk_version
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.ext.sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding { enabled = true }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
        lintOptions {
            abortOnError false
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    compile "com.github.Qixingchen:Android-Base-Utils:V1.1.0"
    //network
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile "com.squareup.retrofit2:adapter-rxjava:2.3.0"
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile "com.squareup.okhttp3:okhttp-urlconnection:3.9.0"
    //stetho
    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    //Rx Android
    compile "io.reactivex:rxandroid:1.2.1"

    //glide
    compile 'com.github.bumptech.glide:glide:4.1.1'

}
// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

[javadoc]*.options*.encoding = 'UTF-8'
[javadoc]*.options*.charSet = 'UTF-8'

artifacts {
    archives sourcesJar
    archives javadocJar
}

//coveralls {
//    jacocoReportPath = "${buildDir}/reports/jacoco/debug/jacoco.xml"
//}
//
//tasks.coveralls {
//    dependsOn 'assembleDebugUnitTest'
//    onlyIf { System.env.'CI' }
//}

